using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Instruments
{
    public class DllExtracter
    {
        /// <summary>
        /// Проверка наличия заданной Dll в папке текущего приложения 
        /// </summary>
        /// <param name="dllName">Имя DLL</param>
        /// <returns>true - если данная Dll есть в папке текущего приложения\n
        /// false - если данная Dll отсутствует в папке текущего приложения</returns>
        private static bool IsDllInDirectory(String dllName)
        {
            string dir = Path.GetDirectoryName(FileOperations.GetLocationOfCurrentExecutable());
            return File.Exists(dir + "\\" + dllName);
        }
        /// <summary>
        /// Распаковка dll для смены иконки исполняемого файла(.exe) в папку текущего приложения 
        /// </summary>
        /// <param name="dllName">Имя dll</param>
        public static void ExtractDll(String dllName)
        {
            if (!IsDllInDirectory(dllName))
            {
                string dir = Path.GetDirectoryName(FileOperations.GetLocationOfCurrentExecutable());
                FileOperations.AppendAllBytes(dir + String.Format("\\{0}.dll", dllName), Resources.IconChanger);
            }
        }
    }
}
